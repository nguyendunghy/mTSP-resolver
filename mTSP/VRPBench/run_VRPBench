#!/bin/bash
# Usage: ./run_VRPBench class problem_name max_trials runs [optimum ]

if [ -z "$4" ]; then
    echo "Usage: ./run_VRPBench class problem_name max_trials runs [optimum]"
    exit
fi

class=$1
name=$2
max_trials=$3
runs=$4
par=TMP/$name.pid$$.par

mkdir -p TOURS
mkdir -p TOURS/$class
mkdir -p TMP

lkh="../../LKH"
echo "SPECIAL" > $par
echo "PROBLEM_FILE = INSTANCES/$class/$name.vrp" >> $par
echo "MAX_TRIALS = $max_trials" >> $par
echo "MTSP_MIN_SIZE = 0" >> $par
echo "MTSP_OBJECTIVE = MINSUM" >> $par
echo "PRECISION = 1" >> $par
echo "RUNS = $runs" >> $par
echo "SEED = 0" >> $par
# echo "SUBGRADIENT = NO" >> $par
# echo "TOUR_FILE = TOURS/$class/$name.$.tour" >> $par
echo "TRACE_LEVEL = 0" >> $par

if false; then
    for FILE in `ls TOURS/$class/$name.*.tour | sort -n -t . -k2,3` ;
    do
        echo "INITIAL_TOUR_FILE = $FILE" >> $par
        break
    done
fi

if false; then
    max_merge_tours=10
    merge_tours=0
    for FILE in `ls TOURS/$class/$name.*.tour | sort -n -t . -k2,3` ;
    do
         let "merge_tours++"
         if [ $merge_tours -gt $max_merge_tours ]; then
             break
         fi
         echo "MERGE_TOUR_FILE = $FILE" >> $par
    done
    echo "MAX_CANDIDATES = 0" >> $par
fi

if [ -n "$5" ]; then
    echo "OPTIMUM = $5" >> $par
fi

$lkh $par

/bin/rm -f $par
