#!/bin/bash
# Usage: ./run_MTSP_EXACT problem_name salesmen objective max_trials runs [[min_size max_size] [optimum ]]

if [ -z "$5" ]; then
    echo "Usage: ./run_MTSP_EXACT problem_name salesmen  objective max_trials runs [[min_size max_size] [optimum]]"
    exit
fi

lkh="LKH"
name=$1
salesmen=$2
mtsp_objective=$3
max_trials=$4
runs=$5
par=TMP/$name.pid$$.par

mkdir -p TOURS
mkdir -p TOURS/TSP
mkdir -p TOURS/TSP/"$mtsp_objective"_EXACT
mkdir -p TMP

echo "SPECIAL" > $par
echo "PROBLEM_FILE = INSTANCES/TSP/$name.tsp" >> $par
echo "SALESMEN = $salesmen" >> $par
echo "MTSP_OBJECTIVE = $mtsp_objective" >> $par
echo "MAX_TRIALS = $max_trials" >> $par
echo "INITIAL_TOUR_ALGORITHM = MTSP" >> $par
echo "RUNS = $runs" >> $par
echo "SCALE = 1000" >> $par
# echo "TOUR_FILE = TOURS/TSP/"$mtsp_objective"_EXACT/$name.$salesmen.$.tour" >> $par
echo "TRACE_LEVEL = 1" >> $par

if [ -n "$6" ] && [ -z "$7" ]; then
    echo "OPTIMUM = $6" >> $par
fi

if [ -n "$7" ]; then
    echo "MTSP_MIN_SIZE = $6" >> $par
    echo "MTSP_MAX_SIZE = $7" >> $par
fi

if [ -n "$8" ]; then
    echo "OPTIMUM = $8" >> $par
fi

if false; then
    for FILE in `ls TOURS/TSP/"$mtsp_objective"_EXACT/$name.$salesmen.*.tour |\
        sort -n -t . -k2,3` ;
    do
        echo "INITIAL_TOUR_FILE = $FILE" >> $par
        break
    done
fi

if false; then
    max_merge_tours=10
    merge_tours=0
    for FILE in `ls TOURS/TSP/"$mtsp_objective"_EXACT/$name.$salesmen.*.tour |\
        sort -n -t . -k2,3` ;
    do
         let "merge_tours++"
         if [ $merge_tours -gt $max_merge_tours ]; then
             break
         fi
         echo "MERGE_TOUR_FILE = $FILE" >> $par
    done 
    echo "MAX_CANDIDATES = 0" >> $par
fi

$lkh $par

/bin/rm -f $par
